)
connectivity_decleaned <- connectivity_decleaned %>%
mutate(ADM1_ES = stringi::stri_trans_general(ADM1_ES, "Latin-ASCII"),
ADM2_ES = stringi::stri_trans_general(ADM2_ES, "Latin-ASCII")
)
colombia_connectivity_clean <- read.csv(file.path(tidy_folder,
"colombia_connectivity_cleaned.csv"))
# from tidying
colombia_infraestructure_clean <- read.csv(file.path(tidy_folder,
"colombia_infrastructure_cleaned.csv"))
packages <- c("tidyr",
"dplyr")
pacman::p_load(packages,
character.only = TRUE,
install = FALSE) # Change to TRUE to install the necessary packages
install.packages("here")
install.packages("renv")
install.packages("dplyr")
install.packages("pacman")
library(here)
library(tidyverse)
install.packages("dplyr")
install.packages("pacman")
packages <- c("tidyr",
"dplyr")
pacman::p_load(packages,
character.only = TRUE,
install = FALSE) # Change to TRUE to install the necessary packages
# Set path of our data
# Set folder path to where you downloaded the data
tidy_folder <- "C:/Users/minis/Documents/rrf-training-2023/data"
# read data
# from cleaned
colombia_connectivity_clean <- read.csv(file.path(tidy_folder,
"colombia_connectivity_cleaned.csv"))
# from tidying
colombia_infraestructure_clean <- read.csv(file.path(tidy_folder,
"colombia_infrastructure_cleaned.csv"))
colombia_connectivity_const <- colombia_connectivity_clean %>%
mutate(avg_u_mbps = avg_u_kbps/1000,
avg_d_mbps = avg_d_kbps/1000
)
##Drop original variable
colombia_connectivity_const <- colombia_connectivity_const %>%
select(-avg_d_kbps, -avg_u_kbps)
##### Task 3  --------------------------
# Handle outliers
# - Visual identification of outliers through plots
ggplot(colombia_connectivity_const, aes(y = "avg_u_mbps" )) +
geom_boxplot() +
facet_wrap(~trimester)
library(ggplot2)
colombia_connectivity_const <- colombia_connectivity_clean %>%
mutate(avg_u_mbps = avg_u_kbps/1000,
avg_d_mbps = avg_d_kbps/1000
)
##Drop original variable
colombia_connectivity_const <- colombia_connectivity_const %>%
select(-avg_d_kbps, -avg_u_kbps)
##### Task 3  --------------------------
# Handle outliers
# - Visual identification of outliers through plots
ggplot(colombia_connectivity_const, aes(y = "avg_u_mbps" )) +
geom_boxplot() +
facet_wrap(~trimester)
ggplot(colombia_connectivity_const, aes(y = "avg_d_mbps" )) +
geom_boxplot() +
facet_wrap(~trimester)
# - Define a function to handle outliers
# Define the function
#
winsor_function <- function(dataset, var, min = 0.00, max = 0.99){
var_sym <- sym(var)
percentiles <- quantile(
dataset %>% pull(!!var_sym), probs = c(min, max), na.rm = TRUE
)
min_percentile <- percentiles[1]
max_percentile <- percentiles[2]
dataset %>%
mutate(
!!paste0(var, "_winsorized") := case_when(
is.na(!!var_sym) ~ NA_real_,
!!var_sym <= min_percentile ~ percentiles[1],
!!var_sym >= max_percentile ~ percentiles[2],
TRUE ~ !!var_sym
)
)
}
# - Apply the function to your dataset
colombia_connectivity_const <- winsor_function(dataset = colombia_connectivity_const, var = "avg_u_mbps")
colombia_connectivity_const <- winsor_function(dataset = colombia_connectivity_const, var = "avg_d_mbps")
hist(colombia_connectivity_const$avg_u_mbps, main= "Before Winsorization", xlab= "Variabke Value")
hist(colombia_connectivity_const$avg_u_mbps_winsorized, main= "After Winsorization", xlab= "Variabke Value")
hist(colombia_connectivity_const$avg_d_mbps, main= "Before Winsorization", xlab= "Variabke Value")
hist(colombia_connectivity_const$avg_d_mbps_winsorized, main= "After Winsorization", xlab= "Variabke Value")
##### Task 4  --------------------------
# Create indicators
# - Create a state database
# - Create a municipality database
state_connetivity <- colombia_connectivity_const %>%
dplyr::group_by( ADM0_PC, ADM0_ES, ADM1_PC,ADM1_ES, trimester) %>%
dplyr::summarize(
avg_u_mbps = mean(avg_u_mbps, na.rm = TRUE),
avg_d_mbps = mean(avg_d_mbps, na.rm = TRUE),
avg_u_mbps_winsorized = mean(avg_u_mbps_winsorized, na.rm = TRUE),
avg_d_mbps_winsorized = mean(avg_d_mbps_winsorized, na.rm = TRUE),
tests = max(tests, na.rm = TRUE)
)%>%
arrange(ADM1_PC)%>%
ungroup()
state_infrastructure <- colombia_infraestructure_clean %>%
dplyr::group_by(ADM0_PC, ADM0_ES, ADM1_PC, ADM1_ES)%>%
dplyr::summarise(across(college:hospital, ~sum(.x, na.rm = TRUE)))%>%
ungroup()
state_database <- state_connetivity %>%
dplyr::left_join(state_infrastructure) %>%
dplyr::group_by(ADM0_PC, ADM0_ES, ADM1_PC,ADM1_ES) %>%
arrange(trimester, ADM1_PC) %>%
mutate(
avg_u_mbps_change = avg_u_mbps_winsorized/dplyr::lag(avg_u_mbps_winsorized)-1,
avg_d_mbps_change = avg_d_mbps_winsorized/dplyr::lag(avg_d_mbps_winsorized)-1,
) %>%
mutate(
across(college:hospital, -replace_na(.x, 0))
) %>%
arrange(ADM1_ES) %>%
ungroup()
state_infrastructure <- colombia_infraestructure_clean %>%
dplyr::group_by(ADM0_PC, ADM0_ES, ADM1_PC, ADM1_ES)%>%
dplyr::summarise(across(college:hospital, ~sum(.x, na.rm = TRUE)))%>%
ungroup()
state_database <- state_connetivity %>%
dplyr::left_join(state_infrastructure) %>%
dplyr::group_by(ADM0_PC, ADM0_ES, ADM1_PC, ADM1_ES) %>%
arrange(trimester, ADM1_PC) %>%
mutate(
avg_u_mbps_change = avg_u_mbps_winsorized/dplyr::lag(avg_u_mbps_winsorized)-1,
avg_d_mbps_change = avg_d_mbps_winsorized/dplyr::lag(avg_d_mbps_winsorized)-1,
) %>%
mutate(across(college:hospital, -replace_na(.x, 0))) %>%
arrange(ADM1_ES) %>%
ungroup()
tidy_folder <- "C:/Users/minis/Documents/rrf-training-2023/data"
municipality_database <- read.csv(file.path(tidy_folder,
"municipality_database.csv"))
state_database <- read.csv(file.path(tidy_folder,
"state_database.csv"))
state_connetivity <- colombia_connectivity_const %>%
dplyr::group_by( ADM0_PC, ADM0_ES, ADM1_PC,ADM1_ES, trimester) %>%
dplyr::summarize(
avg_u_mbps = mean(avg_u_mbps, na.rm = TRUE),
avg_d_mbps = mean(avg_d_mbps, na.rm = TRUE),
avg_u_mbps_winsorized = mean(avg_u_mbps_winsorized, na.rm = TRUE),
avg_d_mbps_winsorized = mean(avg_d_mbps_winsorized, na.rm = TRUE),
tests = max(tests, na.rm = TRUE)
)%>%
arrange(ADM1_PC)%>%
#ungroup()
state_infrastructure <- colombia_infraestructure_clean %>%
dplyr::group_by(ADM0_PC, ADM0_ES, ADM1_PC, ADM1_ES)%>%
dplyr::summarise(across(college:hospital, ~sum(.x, na.rm = TRUE)))%>%
#ungroup()
state_database <- state_connetivity %>%
dplyr::left_join(state_infrastructure) %>%
dplyr::group_by(ADM0_PC, ADM0_ES, ADM1_PC, ADM1_ES) %>%
arrange(trimester, ADM1_PC) %>%
mutate(
avg_u_mbps_change = avg_u_mbps_winsorized/dplyr::lag(avg_u_mbps_winsorized)-1,
avg_d_mbps_change = avg_d_mbps_winsorized/dplyr::lag(avg_d_mbps_winsorized)-1,
) %>%
mutate(across(college:hospital, -replace_na(.x, 0))) %>%
arrange(ADM1_ES) %>%
ungroup()
View(colombia_infraestructure_clean)
state_infrastructure <- colombia_infraestructure_clean %>%
dplyr::group_by(ADM0_PC, ADM0_ES, ADM1_PC, ADM1_ES)%>%
dplyr::summarise(across(college:hospital, ~sum(.x, na.rm = TRUE)))%>%
ungroup()
state_database <- state_connetivity %>%
dplyr::left_join(state_infrastructure) %>%
dplyr::group_by(ADM0_PC, ADM0_ES, ADM1_PC, ADM1_ES)%>%
arrange(trimester, ADM1_PC) %>%
mutate(
avg_u_mbps_change = avg_u_mbps_winsorized/dplyr::lag(avg_u_mbps_winsorized)-1,
avg_d_mbps_change = avg_d_mbps_winsorized/dplyr::lag(avg_d_mbps_winsorized)-1,
) %>%
mutate(across(college:hospital, -replace_na(.x, 0))) %>%
arrange(ADM1_ES) %>%
ungroup()
summary_stats <- municipality_database %>%
# only numeric variables
summarise(across(avg_d_mbps_winsorized:avg_u_mbps_change, list(mean = ~mean(.x, na.rm = TRUE),
sd = ~sd(.x, na.rm = TRUE),
cilower = ~quantile(.x, 0.025, na.rm = TRUE),
ciupper = ~quantile(.x, 0.975, na.rm = TRUE)))) %>%
pivot_longer(cols = everything(),
names_to = c("Statistic", "Variable"),
values_to = "value",
names_sep = "_(?=[^_]+$)") %>%
pivot_wider(names_from = Variable) %>%
rename(Mean = "mean", SD = "sd", `95% CI Lower` = "cilower", `95% CI Upper` = "ciupper")
View(summary_stats)
summary_stats_state <- state_database %>%
# only numeric variables
summarise(across(avg_d_mbps_winsorized:avg_u_mbps_change, list(mean = ~mean(.x, na.rm = TRUE),
sd = ~sd(.x, na.rm = TRUE),
cilower = ~quantile(.x, 0.025, na.rm = TRUE),
ciupper = ~quantile(.x, 0.975, na.rm = TRUE)))) %>%
pivot_longer(cols = everything(),
names_to = c("Statistic", "Variable"),
values_to = "value",
names_sep = "_(?=[^_]+$)") %>%
pivot_wider(names_from = Variable) %>%
rename(Mean = "mean", SD = "sd", `95% CI Lower` = "cilower", `95% CI Upper` = "ciupper")
install.packages("gt")
library(gt)
colombia_connectivity_clean <- read.csv(file.path(tidy_folder,
"colombia_connectivity_cleaned.csv"))
# from tidying
colombia_infraestructure_clean <- read.csv(file.path(tidy_folder,
"colombia_infrastructure_cleaned.csv"))
colombia_connectivity_const <- colombia_connectivity_clean %>%
mutate(avg_u_mbps = avg_u_kbps/1000,
avg_d_mbps = avg_d_kbps/1000
)
##Drop original variable
colombia_connectivity_const <- colombia_connectivity_const %>%
select(-avg_d_kbps, -avg_u_kbps)
##### Task 3  --------------------------
# Handle outliers
# - Visual identification of outliers through plots
ggplot(colombia_connectivity_const, aes(y = "avg_u_mbps" )) +
geom_boxplot() +
facet_wrap(~trimester)
ggplot(colombia_connectivity_const, aes(y = "avg_d_mbps" )) +
geom_boxplot() +
facet_wrap(~trimester)
# - Define a function to handle outliers
# Define the function
#
winsor_function <- function(dataset, var, min = 0.00, max = 0.99){
var_sym <- sym(var)
percentiles <- quantile(
dataset %>% pull(!!var_sym), probs = c(min, max), na.rm = TRUE
)
min_percentile <- percentiles[1]
max_percentile <- percentiles[2]
dataset %>%
mutate(
!!paste0(var, "_winsorized") := case_when(
is.na(!!var_sym) ~ NA_real_,
!!var_sym <= min_percentile ~ percentiles[1],
!!var_sym >= max_percentile ~ percentiles[2],
TRUE ~ !!var_sym
)
)
}
# - Apply the function to your dataset
colombia_connectivity_const <- winsor_function(dataset = colombia_connectivity_const, var = "avg_u_mbps")
colombia_connectivity_const <- winsor_function(dataset = colombia_connectivity_const, var = "avg_d_mbps")
hist(colombia_connectivity_const$avg_u_mbps, main= "Before Winsorization", xlab= "Variabke Value")
hist(colombia_connectivity_const$avg_u_mbps_winsorized, main= "After Winsorization", xlab= "Variabke Value")
hist(colombia_connectivity_const$avg_d_mbps, main= "Before Winsorization", xlab= "Variabke Value")
hist(colombia_connectivity_const$avg_d_mbps_winsorized, main= "After Winsorization", xlab= "Variabke Value")
state_connetivity <- colombia_connectivity_const %>%
dplyr::group_by( ADM0_PC, ADM0_ES, ADM1_PC,ADM1_ES, trimester) %>%
dplyr::summarize(
avg_u_mbps = mean(avg_u_mbps, na.rm = TRUE),
avg_d_mbps = mean(avg_d_mbps, na.rm = TRUE),
avg_u_mbps_winsorized = mean(avg_u_mbps_winsorized, na.rm = TRUE),
avg_d_mbps_winsorized = mean(avg_d_mbps_winsorized, na.rm = TRUE),
tests = max(tests, na.rm = TRUE)
)%>%
arrange(ADM1_PC)%>%
ungroup()
state_infrastructure <- colombia_infraestructure_clean %>%
dplyr::group_by(ADM0_PC, ADM0_ES, ADM1_PC, ADM1_ES)%>%
dplyr::summarise(across(college:hospital, ~sum(.x, na.rm = TRUE)))%>%
ungroup()
state_database <- state_connetivity %>%
dplyr::left_join(state_infrastructure) %>%
dplyr::group_by(ADM0_PC, ADM0_ES, ADM1_PC, ADM1_ES)%>%
arrange(trimester, ADM1_PC)%>%
mutate(
avg_u_mbps_change = avg_u_mbps_winsorized/dplyr::lag(avg_u_mbps_winsorized)-1,
avg_d_mbps_change = avg_d_mbps_winsorized/dplyr::lag(avg_d_mbps_winsorized)-1,
) %>%
mutate(across(college:hospital, -replace_na(.x, 0)))%>%
arrange(ADM1_ES) %>%
ungroup()
summary_stats %>%
gt()%>%
tab_header(title = "Infraestructure and connectivity in colombia by Municipality") %>%
fmt_number(decimals = 2) %>%
gtsave(filename = file.path(tidy_folder, "summary_stats_municipality.html"))
hist(state_database$avg_d_mbps )
?hist
geom_histogram(state_database$avg_d_mbps)
geom_histogram(state_database, aes(y = "avg_u_mbps"))
packages <- c("tidyr",
"dplyr",
"ggplot2",
"corrplot",
"stargazer",
"gt",
"plm",
"lmtest")
pacman::p_load(packages,
character.only = TRUE,
install = FALSE) # Change to TRUE to install the necessary packages
state_connetivity_histogram <- state_database %>%
select(avg_d_mbps:avg_d_mbps_winsorized)%>%
ggplot(aes(x = name, y = value, fill = name ))+
geom_histogram()+
labs(
title = "Diference of Download",
x = "",
y = "",
)
scale_fill_brewer(palette = "set3")+
theme_minimal()
state_connetivity_histogram <- state_database %>%
select(avg_d_mbps:avg_d_mbps_winsorized)%>%
ggplot(aes(x = name, y = value, fill = name ))+
geom_plot()+
labs(
title = "Diference of Download",
x = "",
y = "",
)
state_connetivity_histogram <- state_database %>%
select(avg_d_mbps:avg_d_mbps_winsorized)%>%
ggplot(aes(x = name, y = value, fill = name ))+
geom_boxplot()+
labs(
title = "Diference of Download",
x = "",
y = "",
)
scale_fill_brewer(palette = "set3")+
theme_minimal()
state_connetivity_histogram <- state_database %>%
select(avg_d_mbps,avg_d_mbps_winsorized)%>%
pivot_longer(cols = everything()) %>%
ggplot(aes(x = value))+
geom_histogram(bins = 30)+
facet_wrap(~ name, scales = "free_x")+
labs(
title = "Diference of Download",
x = "Variable",
y = "Frequency",
)
theme_minimal()
state_connetivity_histogram <- state_database %>%
select(avg_d_mbps,avg_d_mbps_winsorized)%>%
pivot_longer(cols = everything()) %>%
ggplot(aes(x = value))+
geom_histogram(bins = 30)+
facet_wrap(~ name, scales = "free_x")+
labs(
title = "Diference of Download",
x = "Variable",
y = "Frequency",
)
theme_minimal()
state_connetivity_histogram <- state_database %>%
select(avg_d_mbps,avg_d_mbps_winsorized)%>%
pivot_longer(cols = everything()) %>%
ggplot(aes(x = value))+
geom_histogram(bins = 30)+
facet_wrap(~ name, scales = "free_x")+
labs(
title = "Diference of Download",
x = "Variable",
y = "Frequency",
)+
theme_minimal()
state_connetivity_histogram <- state_database %>%
select(avg_d_mbps,avg_d_mbps_winsorized)%>%
pivot_longer(cols = everything()) %>%
ggplot(aes(x = value))+
geom_histogram(bins = 30)+
facet_wrap(~ name, scales = "free_x")+
labs(
title = "Diference of Download",
x = "Variable",
y = "Frequency",
)+
theme_minimal()
state_connetivity_histogram <- state_database %>%
select(avg_u_mbps,avg_d_mbps_winsorized)%>%
pivot_longer(cols = everything()) %>%
ggplot(aes(x = value))+
geom_histogram(bins = 30)+
facet_wrap(~ name, scales = "free_x")+
labs(
title = "Diference of Download",
x = "Variable",
y = "Frequency",
)+
theme_minimal()
View(state_connetivity_histogram)
View(state_database)
state_connetivity_histogram <- state_connetivity %>%
select(avg_u_mbps,avg_u_mbps_winsorized)%>%
pivot_longer(cols = everything()) %>%
ggplot(aes(x = value))+
geom_histogram(bins = 30)+
facet_wrap(~ name, scales = "free_x")+
labs(
title = "Diference of Download",
x = "Variable",
y = "Frequency",
)+
theme_minimal()
state_connetivity_histogram <- state_connetivity %>%
select(avg_u_mbps,avg_u_mbps_winsorized)%>%
pivot_longer(cols = everything()) %>%
ggplot(aes(x = value))+
geom_histogram(bins = 30)+
facet_wrap(~ name, scales = "free_x")+
labs(
title = "Diference of Download",
x = "Variable",
y = "Frequency",
)+
theme_minimal()
state_infrastructure_boxplot <- state_database %>%
select(college:hospital)%>%
pivot_longer(cols = everything()) %>%
ggplot(aes(x = name, y = value, fill= name))+
geom_boxplot()+
labs(
title = "Boxplot of Social Infrastrcuture",
x = "Variable",
y = "Number",
)+
scale_fill_brewer(palette = "Set3")
theme_minimal()
state_infrastructure_boxplot <- state_database %>%
select(college:hospital)%>%
pivot_longer(cols = everything()) %>%
ggplot(aes(x = name, y = value, fill= name))+
geom_boxplot()+
labs(
title = "Boxplot of Social Infrastrcuture",
x = "Variable",
y = "Number",
)+
scale_fill_brewer(palette = "Set3")+
theme_minimal()
state_database %>%
select(college:hospital)%>%
pivot_longer(cols = everything()) %>%
ggplot(aes(x = name, y = value, fill= name))+
geom_boxplot()+
labs(
title = "Boxplot of Social Infrastrcuture",
x = "Variable",
y = "Number",
)+
scale_fill_brewer(palette = "Set3")+
theme_minimal()
# Save the plots u
state_connetivity %>%
select(avg_u_mbps,avg_u_mbps_winsorized)%>%
pivot_longer(cols = everything()) %>%
ggplot(aes(x = value))+
geom_histogram(bins = 30)+
facet_wrap(~ name, scales = "free_x")+
labs(
title = "Diference of Download",
x = "Variable",
y = "Frequency",
)+
theme_minimal()
ggsave(filename = file.path(tidy_folder, "Boxplot of Social Infrastrcuture"))
state_infrastructure_boxplot <- state_database %>%
select(college:hospital)%>%
pivot_longer(cols = everything()) %>%
ggplot(aes(x = name, y = value, fill= name))+
geom_boxplot()+
labs(
title = "Boxplot of Social Infrastrcuture",
x = "Variable",
y = "Number",
)+
scale_fill_brewer(palette = "Set3")+
theme_minimal()
ggsave(filename = file.path(tidy_folder, "Boxplot of Social Infrastrcuture"))
rlang::last_trace()
ggsave(filename = file.path(tidy_folder, "Boxplot of Social Infrastrcuture.png"))
model1 <- lm(avg_d_mbps_winsorized ~ school + trimester, data = municipality_database)
summary(model1)
library(corpcor)
install.packages("corrplot")
library(corrplot)
install.packages("stargazer")
library(stargazer)
install.packages("plm")
library(plm)
library(lmtest)
pdata <- pdata.frame(municipality_database, index = c("ADM2_PC", "trimester"))
model_panel <- plm(avg_d_mbps_winsorized ~ school, data = pdata, model = "pooling"  )
sumary(model_panel)
pdata <- pdata.frame(municipality_database, index = c("ADM2_PC", "trimester"))
model_panel <- plm(avg_d_mbps_winsorized ~ school, data = pdata, model = "pooling"  )
summary(model_panel)
model2 <- plm(avg_d_mbps_winsorized ~ school + hospital, data = pdata, model = "pooling"  )
summary(model2)
clustered_se <- vcovHC(model2, type = "HC3", cluster = "group", group = pdata$ADM1_PC)
coeftest(model2, vcov. = clustered_se)
